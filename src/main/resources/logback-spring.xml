<?xml version="1.0" encoding="UTF-8" ?>
<configuration>
<!--
  [LOGGING CONFIGURATION]
  - 이 설정 파일은 Spring Boot의 Logback 설정을 정의합니다.
  - 콘솔, 파일, Slack 등으로 로그를 출력하며, 환경(local/dev/prod)별로 다르게 설정됩니다.
-->

<!-- 1. 로그 파일 디렉토리 설정 (Spring Boot 프로퍼티를 이용해 외부에서 주입 가능) -->
<springProperty name="LOG_DIR" source="logging.file.path"/>

<!-- 2. Slack 알림 전송을 위한 설정 (외부 설정을 참조하여 슬랙 채널로 ERROR 로그를 전송) -->
<springProperty name="SLACK_WEBHOOK" source="slack.webhook-uri"/>
<springProperty name="SLACK_CHANNEL" source="slack.channel"/>
<springProperty name="SLACK_USERNAME" source="slack.username"/>

<!-- 3. 로그 파일 저장 경로 설정 -->
<property name="INFO_LOG_DIR" value="${LOG_DIR}/data/"/>
<property name="ERROR_LOG_DIR" value="${LOG_DIR}/error/"/>

<!-- 4. 로그 출력 패턴 설정 -->
<property name="LOG_PATTERN_CONSOLE"
          value="%yellow(%d{yyyy-MM-dd HH:mm:ss}) %magenta([%thread]) %highlight(%-5level) %cyan(%logger{35}) - %msg%n"/>
<property name="LOG_PATTERN_FILE" value="[%d{yyyy-MM-dd HH:mm:ss}][%thread] %-5level %logger{35} - %msg%n"/>
<property name="SQL_LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{35} - %msg%n"/>
<property name="MAX_HISTORY" value="60"/>  <!-- 로그 보관 기간: 60일 -->

<!-- ====================================================== -->
<!-- 5. 콘솔 로그 설정 -->
        <appender name="Console" class="ch.qos.logback.core.ConsoleAppender">
            <layout class="ch.qos.logback.contrib.json.classic.JsonLayout">
                <jsonFormatter class="ch.qos.logback.contrib.jackson.JacksonJsonFormatter">
                    <prettyPrint>true</prettyPrint>
                </jsonFormatter>
                <timestampFormat>dd.MM.yyyy ' ' HH:mm:ss,SSS</timestampFormat>
                <appendLineSeparator>true</appendLineSeparator>
            </layout>
        </appender>

        <root level="info">
            <appender-ref ref="Console" />
        </root>

<!-- ====================================================== -->
<!-- 6. INFO 레벨 로그 파일 저장 -->
<appender name="INFO_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
        <fileNamePattern>${INFO_LOG_DIR}info_%d{yyyyMMdd}.log</fileNamePattern>
        <maxHistory>${MAX_HISTORY}</maxHistory>
    </rollingPolicy>
    <encoder>
        <pattern>
            ${LOG_PATTERN_FILE}
        </pattern>
        <timestamp>
            <fieldName>@timestamp</fieldName>
            <pattern>yyyy-MM-dd'T'HH:mm:ss.SSSX</pattern>
        </timestamp>
    </encoder>
</appender>

<!-- ====================================================== -->
<!-- 7. ERROR 레벨 로그 파일 저장 -->
<appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
        <level>ERROR</level>
        <onMatch>ACCEPT</onMatch>
        <onMismatch>DENY</onMismatch>
    </filter>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
        <fileNamePattern>${ERROR_LOG_DIR}error_%d{yyyyMMdd}.log</fileNamePattern>
        <maxHistory>${MAX_HISTORY}</maxHistory>
    </rollingPolicy>
    <encoder>
        <pattern>${LOG_PATTERN_FILE}</pattern>
    </encoder>
</appender>

<!-- ====================================================== -->
<!-- 8. Slack 알림 설정 (ERROR 발생 시 Slack으로 로그 전송) -->
<appender name="SLACK_ERROR" class="com.github.maricn.logback.SlackAppender">
    <webhookUri>${SLACK_WEBHOOK}</webhookUri>
    <channel>${SLACK_CHANNEL}</channel>
    <layout class="ch.qos.logback.classic.PatternLayout">
        <pattern>${LOG_PATTERN_FILE}</pattern>
    </layout>
    <username>${SLACK_USERNAME}</username>
    <colorCoding>true</colorCoding>
</appender>

<!-- ✅ Slack 알림을 비동기로 처리 -->
<appender name="ASYNC_SLACK_ERROR" class="ch.qos.logback.classic.AsyncAppender">
    <appender-ref ref="SLACK_ERROR"/>
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
        <level>ERROR</level>
    </filter>
</appender>

<!-- ====================================================== -->
<!-- 9. 프로파일별 로깅 설정 -->

<!-- ✅ Local 환경: 콘솔에만 로그 출력 -->
<springProfile name="local">
    <root level="INFO">
        <appender-ref ref="CONSOLE"/>
    </root>
</springProfile>

<!-- ✅ Production 환경: 콘솔, 파일 저장, Slack 알림 활성화 -->
<springProfile name="prod">
    <root level="INFO">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="INFO_FILE"/>
        <appender-ref ref="ERROR_FILE"/>
        <appender-ref ref="ASYNC_SLACK_ERROR"/>
    </root>
</springProfile>

<!-- ✅ Dev 환경: 콘솔, 파일 저장 -->
<springProfile name="dev">
    <root level="INFO">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="INFO_FILE"/>
        <appender-ref ref="ERROR_FILE"/>
    </root>
</springProfile>

</configuration>