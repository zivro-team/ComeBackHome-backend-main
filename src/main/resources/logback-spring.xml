<?xml version="1.0" encoding="UTF-8" ?>
<configuration>
    <!-- 1. 로그 파일 디렉토리 설정 (Spring Boot 프로퍼티를 이용해 외부에서 주입 가능) -->
    <springProperty name="LOG_DIR" source="logging.file.path"/>

    <!-- 2. Slack 알림 전송을 위한 설정 (외부 설정을 참조하여 슬랙 채널로 ERROR 로그를 전송) -->
    <springProperty name="SLACK_WEBHOOK" source="slack.webhook-uri"/>
    <springProperty name="SLACK_CHANNEL" source="slack.channel"/>
    <springProperty name="SLACK_USERNAME" source="slack.username"/>

    <!-- 3. 로그 파일 저장 경로 설정 -->
    <property name="INFO_LOG_DIR" value="${LOG_DIR}/data/"/>
    <property name="ERROR_LOG_DIR" value="${LOG_DIR}/error/"/>

    <!-- 4. 로그 출력 패턴 설정 -->
    <property name="MAX_HISTORY" value="60"/>  <!-- 로그 보관 기간: 60일 -->

    <!-- ====================================================== -->
    <!-- 5. 콘솔 로그 설정 -->
    <appender name="Console" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.contrib.json.classic.JsonLayout">
            <jsonFormatter class="ch.qos.logback.contrib.jackson.JacksonJsonFormatter">
                <prettyPrint>true</prettyPrint>
            </jsonFormatter>
            <timestampFormat>yyyy.MM.dd ' ' HH:mm:ss,SSS</timestampFormat>
            <appendLineSeparator>true</appendLineSeparator>
        </layout>
    </appender>

    <root level="info">
        <appender-ref ref="Console"/>
    </root>

    <!-- ====================================================== -->
    <!-- 6. INFO 레벨 로그 파일 저장 -->
    <appender name="INFO_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${INFO_LOG_DIR}info_%d{yyyyMMdd}.log</fileNamePattern>
            <maxHistory>${MAX_HISTORY}</maxHistory>
        </rollingPolicy>
        <layout class="ch.qos.logback.contrib.json.classic.JsonLayout">
            <jsonFormatter class="ch.qos.logback.contrib.jackson.JacksonJsonFormatter">
                <prettyPrint>false</prettyPrint>
            </jsonFormatter>
            <timestampFormat>yyyy.MM.dd ' ' HH:mm:ss,SSS</timestampFormat>
            <includeContextName>true</includeContextName>
            <includeMdc>true</includeMdc>
        </layout>
    </appender>

    <!-- ====================================================== -->
    <!-- 7. ERROR 레벨 로그 파일 저장 -->
    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter"> <!-- levelFilter X -->
            <level>ERROR</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${ERROR_LOG_DIR}error_%d{yyyyMMdd}.log</fileNamePattern>
            <maxHistory>${MAX_HISTORY}</maxHistory>
        </rollingPolicy>
        <layout class="ch.qos.logback.contrib.json.classic.JsonLayout">
            <jsonFormatter class="ch.qos.logback.contrib.jackson.JacksonJsonFormatter">
                <prettyPrint>false</prettyPrint>
            </jsonFormatter>
            <timestampFormat>yyyy.MM.dd ' ' HH:mm:ss,SSS</timestampFormat>
            <includeContextName>true</includeContextName>
            <includeMdc>true</includeMdc>
        </layout>
    </appender>

    <!-- ====================================================== -->
    <!-- 8. 프로파일별 로깅 설정 -->

    <!-- ✅ Local 환경: 콘솔에만 로그 출력 -->
    <springProfile name="local">
        <root level="INFO">
            <appender-ref ref="Console"/>
        </root>
    </springProfile>

    <!-- ✅ Production 환경: 콘솔, 파일 저장, Slack 알림 활성화 -->
    <springProfile name="prod">
        <root level="INFO">
            <appender-ref ref="Console"/>
            <appender-ref ref="INFO_FILE"/>
            <appender-ref ref="ERROR_FILE"/>
            <appender-ref ref="ASYNC_SLACK_ERROR"/>
        </root>
    </springProfile>

    <!-- ✅ Dev 환경: 콘솔, 파일 저장 -->
    <springProfile name="dev">
        <root level="INFO">
            <appender-ref ref="Console"/>
            <appender-ref ref="INFO_FILE"/>
            <appender-ref ref="ERROR_FILE"/>
        </root>
    </springProfile>

</configuration>