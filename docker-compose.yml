services:
  backend:
    image: asia-northeast3-docker.pkg.dev/comebackhome-454307/backend-main/backend-main:latest
    restart: unless-stopped
    container_name: backend-container
    ports:
      - "8085:8085"
    environment:
      SPRING_PROFILES_ACTIVE: "prod, secret"
      GOOGLE_APPLICATION_CREDENTIALS: /path/to/your/service-account-key.json
    volumes:
      - ./path/to/your/service-account-key.json:/path/to/your/service-account-key.json
      - ./wait-for-it.sh:/wait-for-it.sh
    entrypoint: ["/wait-for-it.sh", "elasticsearch:9200", "--", "java", "-jar", "-Dspring.profiles.active=prod", "-Duser.timezone=Asia/Seoul", "/app/app.jar"]
    networks:
      - app-network

  redis-service:
    image: redis:alpine
    restart: unless-stopped
    command: redis-server /usr/local/etc/redis/redis.conf --requirepass 1234
    container_name: redis-refresh-token
    ports:
      - "6379:6379"
    volumes:
      - ./data/refresh-token-data:/data
      - ./data/refresh-token-data/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - app-network

  mongo:
    image: mongo
    restart: unless-stopped
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
    networks:
      - app-network

  mongo-express:
    image: mongo-express
    restart: unless-stopped
    container_name: mongo_express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=root
      - ME_CONFIG_MONGODB_AUTH_DATABASE=admin
      - ME_CONFIG_BASICAUTH_USERNAME=root
      - ME_CONFIG_BASICAUTH_PASSWORD=root
      - ME_CONFIG_MONGODB_SERVER=mongo
    depends_on:
      - mongo
    networks:
      - app-network

  grafana:
    image: grafana/grafana-oss:10.2.3
    restart: unless-stopped
    pull_policy: always
    container_name: grafana
    user: root
    ports:
      - "4000:3000"
    links:
      - elasticsearch:elasticsearch
    volumes:
      - ./data/grafana:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_DOMAIN=localhost:4000
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    networks:
      - app-network

  prometheus:
    image: prom/prometheus:v2.35.0
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./data/prometheus/config:/etc/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    networks:
      - app-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    restart: unless-stopped
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    command: >
      bash -c '
        bin/elasticsearch-plugin install analysis-nori || true;
        /usr/local/bin/docker-entrypoint.sh elasticsearch
      '
    volumes:
      - ./data/elasticsearch:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - app-network

  filebeat:
    container_name: filebeat
    restart: unless-stopped
    image: docker.elastic.co/beats/filebeat:7.14.1
    volumes:
      - ./src/main/resources/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ./logs:/usr/share/filebeat/logs
    networks:
      - app-network

  mysqld-exporter:
    image: quay.io/prometheus/mysqld-exporter
    container_name: mysqld-exporter
    ports:
      - "9104:9104"
    command:
      - "--mysqld.username=exporter:1234"
      - "--mysqld.address=34.122.128.155:3306"
    networks:
      - app-network

  mongodb-exporter:
    container_name: mongodb-exporter
    image: percona/mongodb_exporter:0.41
    ports:
      - "9216:9216"
    environment:
      - MONGODB_URI=mongodb://exporter:exporter@mongo:27017/chat_app?authSource=admin
    command:
      - "--mongodb.uri=mongodb://exporter:exporter@mongo:27017/chat_app?authSource=admin"
      - "--collect-all"
      - "--compatible-mode"
      - "--web.listen-address=:9216"
    depends_on:
      - mongo
    networks:
      - app-network

  redis-exporter:
    container_name: redis-exporter
    image: oliver006/redis_exporter:latest
    ports:
      - "9121:9121"
    command:
      - '--redis.addr=redis://redis-refresh-token:6379'
      - '--redis.password=1234'
    depends_on:
      - redis-service
    networks:
      - app-network


networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
  refresh-token-data:
  mongo-data:

