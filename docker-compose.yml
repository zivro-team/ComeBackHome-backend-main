services:
  backend:
    image: asia-northeast3-docker.pkg.dev/comebackhome-454307/backend-main/backend-main:latest
    container_name: backend-container
    restart: unless-stopped
    ports:
      - "8085:8085"
    environment:
      SPRING_PROFILES_ACTIVE: "prod, secret"
      GOOGLE_APPLICATION_CREDENTIALS: /path/to/your/service-account-key.json  # GCS 인증
    volumes:
      - ./build/libs:/build/libs
      - ./path/to/your/service-account-key.json:/path/to/your/service-account-key.json  # 서비스 계정 키 파일 매핑
    depends_on:
      - elasticsearch
    networks:
      - app-network

  redis-service:
    image: redis:alpine
    command: redis-server /usr/local/etc/redis/redis.conf --requirepass 1234
    container_name: redis-refresh-token
    ports:
      - "6379:6379"
    volumes:
      - ./data/refresh-token-data:/data
      - ./data/refresh-token-data/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - app-network

  mongo:
    image: mongo
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
    networks:
      - app-network

  mongo-express:
    image: mongo-express
    container_name: mongo_express
    restart: always
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=root
      - ME_CONFIG_MONGODB_AUTH_DATABASE=admin
      - ME_CONFIG_BASICAUTH_USERNAME=root
      - ME_CONFIG_BASICAUTH_PASSWORD=root
      - ME_CONFIG_MONGODB_SERVER=mongo
    depends_on:
      - mongo
    networks:
      - app-network

  prometheus:
    image: prom/prometheus:v2.35.0
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./data/prometheus/config:/etc/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    networks:
      - app-network
#    links:
#      - node-exporter:node-exporter

  grafana:
    image: grafana/grafana-oss:8.5.2
    pull_policy: always
    container_name: grafana
    restart: unless-stopped
    user: root
    ports:
      - "4000:3000"
    links:
      - prometheus:prometheus
    volumes:
      - ./data/grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_DOMAIN=localhost
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    networks:
      - app-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
    command: >
      bash -c '
        bin/elasticsearch-plugin install analysis-nori;
        /usr/local/bin/docker-entrypoint.sh elasticsearch
      '
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
  refresh-token-data:
  mongo-data:

